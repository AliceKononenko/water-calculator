{"version":3,"sources":["App.js","index.js"],"names":["App","format","useState","gender","setGender","mas","setMas","activeTime","setActiveTime","activeTime2","setActiveTime2","newPortion","setNewPortion","time","setTime","data","setData","Date","toISOString","substr","day","setDay","dayNorm","setDayNorm","dayDrunk","setDayDrunk","activity","setActivity","weather","setWeather","dataWeek","setDataWeek","useEffect","localStorage","getItem","JSON","parse","toFixed","setItem","toString","sum","filter","item","map","portion","stringify","dataWeekNew","i","moment","add","reverse","className","strokeColor","from","to","percent","status","value","style","width","onChange","e","Option","max","min","size","onClick","Modal","info","title","content","onOk","fullscreen","onSelect","allowClear","placeholder","id","CloseCircleOutlined","index","findIndex","f1","slice","f2","removePortion","labels","datasets","label","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3759d876.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Select, Modal, Slider, Button, TimePicker, InputNumber, Calendar, Progress} from \"antd\";\r\nimport moment from 'moment';\r\nimport {CloseCircleOutlined} from \"@ant-design/icons\";\r\nimport { Bar } from 'react-chartjs-2';\r\nconst App = () => {\r\n    const format = 'HH:mm';\r\n    const [gender, setGender] = useState('men');\r\n    const [mas, setMas] = useState(80);\r\n    const [activeTime, setActiveTime] = useState(16);\r\n    const [activeTime2, setActiveTime2] = useState(16);\r\n    const [newPortion, setNewPortion] = useState(300);\r\n    const [time, setTime] = useState('12:00');\r\n    const [data, setData] = useState([]);\r\n    const [day, setDay] = useState(new Date().toISOString().substr(0, 10));\r\n    const [dayNorm, setDayNorm] = useState(0);\r\n    const [dayDrunk, setDayDrunk] = useState(0);\r\n    const [activity, setActivity] = useState('1');\r\n    const [weather, setWeather] = useState('1'); \r\n    const [dataWeek, setDataWeek] = useState([]); \r\n    function addNewPortion() {\r\n        setData([...data, {id: new Date(), portion: newPortion, day, time}])\r\n    }\r\n    function removePortion(id){\r\n        const index = data.findIndex(item => item.id === id);\r\n        const f1 = data.slice(0, index); \r\n        const f2 = data.slice(index+1); \r\n        setData([...f1, ...f2]);\r\n    }\r\n    useEffect(()=> { \r\n        localStorage.getItem('data') && setData(JSON.parse(localStorage.getItem('data')));\r\n        localStorage.getItem('gender') && setGender(localStorage.getItem('gender'));\r\n        localStorage.getItem('mas') && setMas(+localStorage.getItem('mas'));\r\n        localStorage.getItem('activeTime') && setActiveTime(+localStorage.getItem('activeTime'));\r\n        localStorage.getItem('activity') && setActivity(localStorage.getItem('activity'));\r\n        localStorage.getItem('weather') && setWeather(localStorage.getItem('weather'));\r\n    }, []);\r\n    useEffect(()=>{\r\n        if (gender === 'men') {\r\n            setDayNorm(((0.03 * mas + activeTime * 0.5)*+activity*+weather).toFixed(1)); \r\n        } else {\r\n            setDayNorm(((0.025 * mas + activeTime * 0.4)*+activity*+weather).toFixed(1));\r\n        }\r\n        localStorage.setItem('gender', gender);\r\n        localStorage.setItem('mas', mas.toString());//\r\n        localStorage.setItem('activeTime', activeTime.toString());\r\n        localStorage.setItem('activity', activity);\r\n        localStorage.setItem('weather', weather);\r\n    }, [gender, mas, activeTime, activity, weather]);\r\n    useEffect(()=> {\r\n        let sum = 0; \r\n        data?.filter(item => item.day === day).map(item => {\r\n            sum += item.portion;\r\n            return sum;\r\n        })\r\n        setDayDrunk(sum/1000);\r\n    }, [day, data]);\r\n    useEffect(()=> {\r\n        localStorage.setItem('data', JSON.stringify(data));\r\n    }, [data]);\r\n    useEffect(()=> {\r\n        let dataWeekNew = [];\r\n        for(let i = 0; i<30; i++) { \r\n            let sum = 0; \r\n            const day = moment().add(-(i), 'day').format('YYYY-MM-DD');\r\n            data?.filter(item => item.day === day).map(item => {\r\n                sum += item.portion;\r\n                return sum;\r\n            })\r\n            dataWeekNew[i] = {day, sum}\r\n        }\r\n        setDataWeek(dataWeekNew.reverse()); \r\n    }, [data]);\r\n    function info() {\r\n        Modal.info({\r\n            title: 'Рекомендации',\r\n            content: (\r\n                <div>\r\n                    <p>1. Выпивайте стакан воды медленно небольшими глотками</p>\r\n                    <p>2. Задерживайте воду во рту на некоторое время перед тем, как проглотить</p>\r\n                    <p>3. Пить воду лучше сидя, нежели в положении стоя или на ходу</p>\r\n                    <p>4. Не пейте холодную или ледяную воду</p>\r\n                    <p>5. Не пейте воду сразу после еды</p>\r\n                    <p>6. Не пейте холодную воду сразу после горячих напитков</p>\r\n                    <p>7. Всегда пейте воду перед мочеиспусканием, но не пейте воду сразу после мочеиспускания</p>\r\n                </div>\r\n            ),\r\n            onOk() {},\r\n        });\r\n    }\r\n    return (\r\n        <div className='container'>\r\n            <h1>\r\n            КАЛЬКУЛЯТОР РАСЧЕТА НОРМЫ ВОДЫ НА ДЕНЬ ДЛЯ ЧЕЛОВЕКА\r\n            </h1>\r\n            <div className=\"row\">\r\n                <Progress \r\n                    strokeColor={{\r\n                        from: '#108ee9',\r\n                        to: '#87d068',\r\n                    }}\r\n                    percent={(dayDrunk/dayNorm*100).toFixed(1)} \r\n                    status=\"active\"\r\n                />\r\n                <div className=\"col-xl-4 col-md-6 col-sm-12 mb-5\">\r\n                    <h4>Ваш пол:</h4>\r\n                    <Select value={gender} style={{width: '100%'}} onChange={(e) => setGender(e)} > \r\n                        <Select.Option value=\"men\">Мужской</Select.Option>\r\n                        <Select.Option value=\"women\">Женский</Select.Option>\r\n                    </Select>\r\n                    <h4>Ваш вес: {mas + ' кг'}</h4> \r\n                    <Slider value={mas} max={200} min={30} onChange={(e) => setMas(e)}/>\r\n                    <h4>Физическая нагрузка: {activeTime + ' ч'}</h4>\r\n                    <Slider value={activeTime} max={10} min={0} onChange={(e) => setActiveTime(e)}/>\r\n                    <h4>Уровень дневной активности:</h4>\r\n                    <Select value={activity} style={{width: '100%'}} onChange={(e) => setActivity(e)} > \r\n                        <Select.Option value=\"0.9\">Слабый (до 5 000 шагов)</Select.Option>\r\n                        <Select.Option value=\"1\">Средний (до 8 000 шагов)</Select.Option>\r\n                        <Select.Option value=\"1.2\">Высокий (более 8000 шагов)</Select.Option>\r\n                    </Select>\r\n                    <h4>Температура окружающей среды:</h4>\r\n                    <Select value={weather} style={{width: '100%'}} onChange={(e) => setWeather(e)} > \r\n                        <Select.Option value=\"0.9\">Холодная погода (менее 10°)</Select.Option>\r\n                        <Select.Option value=\"1\">Теплая погода (+11°..+15°)</Select.Option>\r\n                        <Select.Option value=\"1.3\">Жаркая погода (более +15°)</Select.Option>\r\n                    </Select>\r\n                    <h5 className='text-muted'>Норма воды на день: {dayNorm} л</h5>\r\n                </div>\r\n                <div className=\"col-xl-4 col-md-6 col-sm-12 mb-5\">\r\n                    <h4>Время бодрствования: {activeTime2} ч</h4>\r\n                    <Slider value={activeTime2} max={24} min={0} onChange={(e) => setActiveTime2(e)}/>\r\n                    <h5 className='text-muted'>Пейте по стакану воды (300мл) <p>каждые {(60/((dayNorm/activeTime2)/0.3)).toFixed(0)} минут</p></h5>\r\n                    <Button className='mt-3 mb-1' style={{width: '100%'}} size='large' onClick={info}>Рекомендации</Button>\r\n                </div>\r\n                <div className=\"col-xl-4 col-md-6 col-sm-12 mb-5\">\r\n                    <h4>Выберите время и количество выпитой воды</h4>\r\n                    <Calendar value={moment(day)} fullscreen={false} onSelect={e => setDay(e.format('YYYY-MM-DD'))}/> \r\n                    <div className='d-flex'>\r\n                        <TimePicker allowClear={false} value={moment(time, format)} onChange={(e) => {\r\n                            setTime(e.format('HH:mm'));\r\n                        }} format={format}/> \r\n                        <InputNumber min={1} max={2000} value={newPortion} onChange={e => setNewPortion(e)} \r\n                                     placeholder='Кол-во мл'/>\r\n                        <Button onClick={() => addNewPortion()}>Добавить</Button>\r\n                    </div>\r\n                    <div>\r\n                        {data?.filter(e => e.day === day).map(item => { \r\n                            return (\r\n                                <div key={item.id} className='d-flex justify-content-between align-items-center'>\r\n                                    <h4 >{item.time} - {item.portion + ' мл'} </h4>\r\n                                    <CloseCircleOutlined onClick={()=>removePortion(item.id)} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <h5>Всего за день: {dayDrunk} л</h5> \r\n                </div>\r\n            </div>\r\n            <h4>Статистика за последний месяц:</h4>\r\n                    <Bar data={{ //График\r\n                        labels: dataWeek.map(item => item.day),\r\n                        datasets: [{\r\n                            label: 'Выпито',\r\n                            data: dataWeek.map(item => item.sum/1000),\r\n                        }]\r\n                    }}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport './bootstrap.css';\nimport './index.css'\nReactDOM.render(\n    <App/>, document.getElementById('root')\n);\n"],"sourceRoot":""}